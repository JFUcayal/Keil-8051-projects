#include <REG51F380.H>

K_LOAD EQU P0.7

BSEG AT 0H
INVITED: DBIT 1
RECEBIDO:DBIT 1
WRONG:	 DBIT 1

DSEG AT 30H
VALUE:				DS 1
STATE_SIZE:			DS 1
LOCKED_SIZE:		DS 1
DECRYPT_SIZE:		DS 1
FAIL_SIZE:			DS 1
OPEN_SIZE:			DS 1
ENCRYPT_SIZE:		DS 1
BLOCKED_SIZE:		DS 1
RECOVER_SIZE:		DS 1
ATTEMPT_SIZE:		DS 1
ATTEMPT_NUM_SIZE:	DS 1
COUNTER:			DS 1

CSEG AT 0H
	SJMP INIT
CSEG AT 50H
INIT:
	MOV FLSCL,#90H			;SYSCLK=48MHz
	MOV CLKSEL,#3
	
	MOV PCA0MD,#0
	MOV XBR0,#1
	MOV XBR1,#40H
	
	MOV SP,#(255-32)
	
	;MOV SCON0,#10H
	MOV TMOD,#20H
	MOV TH1,#30H			;115200bps@48MHz
	ORL CKCON,#8
	SETB TR1
	
	CLR TI0
	MOV COUNTER,#0
	
	SETB EA
	;SETB ES0
	
MAIN:
	MOV R7,#0
	MOV STATE_SIZE,#6
	MOV LOCKED_SIZE,#6
	MOV DECRYPT_SIZE,#7
	MOV FAIL_SIZE,#4
	MOV OPEN_SIZE,#4
	MOV ENCRYPT_SIZE,#7
	MOV BLOCKED_SIZE,#7
	MOV RECOVER_SIZE,#7
	MOV ATTEMPT_SIZE,#10
	MOV ATTEMPT_NUM_SIZE,#5
	
M_LOOP:
	JB K_LOAD,$
	;JNB K_LOAD,SR_READ_ARRAY
	;JMP M_LOOP

	ACALL SR_READ_ARRAY
	
;PRINT CURRENT STATE
SR_PRINT_STATE:
	MOV DPTR,#LOCKED_STRING
SR_PRINT_LOOP:
	MOV A,R7
	MOVC A,@A+DPTR
	MOV SBUF0,A
	JNB TI0,$
	CLR TI0
	INC R7
	DJNZ LOCKED_SIZE,SR_PRINT_LOOP
	MOV R7,#0
	
	;NEW LINE
	ACALL SR_NEW_LINE
	
;ATTEMPT PRINT
SR_PRINT_ATTEMPT:
	MOV DPTR,#ATTEMPT_STRING
SR_ATTEMPT_LOOP:
	MOV A,R7
	MOVC A,@A+DPTR
	MOV SBUF0,A
	JNB TI0,$
	CLR TI0
	INC R7
	DJNZ ATTEMPT_SIZE,SR_ATTEMPT_LOOP
	MOV R7,#0

	
;ATTEMPT NUMBER
SR_PRINT_ATTEMPT_NUM:
	MOV DPTR,#ATTEMPT_NUM_ARRAY
SR_ATTEMPT_NUM_LOOP:
	MOV R7,COUNTER
	MOV A,R7
	MOVC A,@A+DPTR
	MOV SBUF0,A
	JNB TI0,$
	CLR TI0
	;INC R7
	INC COUNTER
	MOV A,COUNTER
	XRL A,#5
	JZ SR_RESET_ARRAY
	MOV R7,#0	
	
	ACALL SR_NEW_LINE
	
	;RESET
	JMP MAIN
	
SR_RESET_ARRAY:
	MOV COUNTER,#0
	ACALL SR_NEW_LINE
	JMP MAIN

;----------------------------------------
;PRINT ESTADO:
SR_READ_ARRAY:
	MOV DPTR,#STATE_STRING
SR_READ_LOOP:
	JNB K_LOAD,$
	MOV A,R7
	MOVC A,@A+DPTR
	MOV SBUF0,A
	JNB TI0,$
	CLR TI0
	INC R7
	
	DJNZ STATE_SIZE,SR_READ_LOOP
	MOV R7,#0
	RET

;NEW LINE
SR_NEW_LINE:
	MOV R7,#10
	MOV SBUF0,R7
	JNB TI0,$
	CLR TI0
	
	MOV R7,#13
	MOV SBUF0,R7
	JNB TI0,$
	CLR TI0
	
	MOV R7,#0
	RET
	
;----------------------------------------
ATTEMPT_NUM_ARRAY:
	DB '12345'
ATTEMPT_STRING:
	DB 'Tentativa:'
STATE_STRING:
	DB 'State:'
LOCKED_STRING:
	DB 'Locked'
DECRYPT_STRING:
	DB 'Decrypt'
FAIL_STRING:
	DB 'Fail'
OPEN_STRING:		
	DB 'Open'
ENCRYPT_STRING:
	DB 'Encrypt'
BLOCKED_STRING:
	DB 'Blocked'
RECOVER_STRING:
	DB 'Recover'
		
END